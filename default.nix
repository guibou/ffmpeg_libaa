let
  pkgs = import <nixpkgs> {};
in
rec {
  ffmpeg = pkgs.ffmpeg_2_8.overrideAttrs(old: {
    src = pkgs.fetchurl {
      url = "https://github.com/FFmpeg/FFmpeg/archive/d5b9ecc2d1ed345282064e41a2d6fbe4fa03bb4e.tar.gz";
      sha256 = "0bzdwpgf0cayyl1blsiyjn8d4xry0a7aazl0aw1hpm9v96yx06pz";
    };

    configureFlags = old.configureFlags ++ ["--enable-libaa"];
    buildInputs = old.buildInputs ++ [ pkgs.aalib ];

    patches = old.patches ++ [
      # This patch is from:
      # https://ffmpeg.org/pipermail/ffmpeg-devel/2014-June/159169.html
      # I git checkout d5b9ecc2d1ed345282064e41a2d6fbe4fa03bb4e and git apply the patch from the mail
      # Solve trivial merge conflicts and dumped the result in aa.diff
      ./aa.diff
    ];
  });

  # Your system input and output camera
  # Input is your real camera
  input = "/dev/video0";
  # Output is the camera generated by v4l2loopback
  output = "/dev/video4";

  shell = pkgs.mkShell {
    buildInputs = [ ffmpeg ];

    shellHook = ''
      # -re for realtime
      # yuv420p works well with chromium
      # -f v4l2 outputs in v4l2 format
      # the scale is just because otherwise it is too sloow
      # arguments for aa are taken on the internet. Looks good
      ffmpeg -re -i ${input} \
           -pix_fmt yuv420p -vf 'scale=iw/3:ih/4,aa=fontname=terminus:fontsize=12:linespacing=1.0:contrast=50' \
           -f v4l2 ${output}
    '';
  };
}

  # The v4l2loopback module must be installed,
  # See: https://github.com/umlaeute/v4l2loopback
  # I had better results with theses arguments when loading
  # modprobe v4l2loopback devices=1 max_buffers=2 exclusive_caps=1 card_label="VirtualCam"
  # Mostly, 'exclusive_caps' allow the device to be seen by some webbrowsers.
